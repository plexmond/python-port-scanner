name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build_and_push:
    name: Docker image built and push
    runs-on: ubuntu-latest
    steps:
      - name: Repo
        uses: actions/checkout@v2

      - name: ACR login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Docker image built and push to ACR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/python-port-scanner:${{ github.sha }}
          build-args: |
          MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}
          MAILGUN_DOMAIN_NAME=${{ secrets.MAILGUN_DOMAIN_NAME }}
          FROM_EMAIL=${{ secrets.FROM_EMAIL }}

  deploy:
    name: Deploy to ACI
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Repo
        uses: actions/checkout@v2

      - name: AZ login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Delete existing ACI
        run: |
          az container delete --resource-group ${{ secrets.RESOURCE_GROUP }} --name portscanner --yes

      - name: Create ACI / update
        run: |
          az container create --resource-group ${{ secrets.RESOURCE_GROUP }} --name portscanner --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/python-port-scanner:${{ github.sha }} --dns-name-label portscanner --ports 5000 --registry-username ${{ secrets.REGISTRY_USERNAME }} --registry-password ${{ secrets.REGISTRY_PASSWORD }} --query "{FQDN:ipAddress.fqdn}" --output tsv


